// <auto-generated>
// Copyright Â© 2018 FINBOURNE TECHNOLOGY LTD
//
// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to
// deal in the Software without restriction, including without limitation the
// rights to use, copy, modify, merge, publish, distribute, sublicense, and/or
// sell copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:
//
// The above copyright notice and this permission notice shall be included in
// all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
// FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS
// IN THE SOFTWARE.
// </auto-generated>

namespace Finbourne.Models
{
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Linq;

    public partial class PortfolioReconciliationRequest
    {
        /// <summary>
        /// Initializes a new instance of the PortfolioReconciliationRequest
        /// class.
        /// </summary>
        public PortfolioReconciliationRequest()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the PortfolioReconciliationRequest
        /// class.
        /// </summary>
        /// <param name="portfolioId">The id of the portfolio to be
        /// reconciled</param>
        /// <param name="effectiveAt">The effective date of the
        /// portfolio</param>
        /// <param name="asAt">Optional. The AsAt date of the portfolio</param>
        public PortfolioReconciliationRequest(ResourceId portfolioId, System.DateTimeOffset effectiveAt, System.DateTimeOffset? asAt = default(System.DateTimeOffset?))
        {
            PortfolioId = portfolioId;
            EffectiveAt = effectiveAt;
            AsAt = asAt;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets the id of the portfolio to be reconciled
        /// </summary>
        [JsonProperty(PropertyName = "portfolioId")]
        public ResourceId PortfolioId { get; set; }

        /// <summary>
        /// Gets or sets the effective date of the portfolio
        /// </summary>
        [JsonProperty(PropertyName = "effectiveAt")]
        public System.DateTimeOffset EffectiveAt { get; set; }

        /// <summary>
        /// Gets or sets optional. The AsAt date of the portfolio
        /// </summary>
        [JsonProperty(PropertyName = "asAt")]
        public System.DateTimeOffset? AsAt { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (PortfolioId == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "PortfolioId");
            }
        }
    }
}
