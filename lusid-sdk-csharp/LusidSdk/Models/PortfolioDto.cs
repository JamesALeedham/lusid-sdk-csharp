// <auto-generated>
// Copyright Â© 2018 FINBOURNE TECHNOLOGY LTD
//
// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to
// deal in the Software without restriction, including without limitation the
// rights to use, copy, modify, merge, publish, distribute, sublicense, and/or
// sell copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:
//
// The above copyright notice and this permission notice shall be included in
// all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
// FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS
// IN THE SOFTWARE.
// </auto-generated>

namespace Finbourne.Models
{
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    public partial class PortfolioDto
    {
        /// <summary>
        /// Initializes a new instance of the PortfolioDto class.
        /// </summary>
        public PortfolioDto()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the PortfolioDto class.
        /// </summary>
        /// <param name="href">Link to retrieve the current entity</param>
        /// <param name="id">Identifier for the portfolio</param>
        /// <param name="name">Name of the portfolio</param>
        /// <param name="created">Portfolio creation time in UTC</param>
        /// <param name="parentPortfolioId">If this is a derived portfolio, the
        /// identifier of the portfolio from which it is derived</param>
        /// <param name="version">The version of the portfolio</param>
        public PortfolioDto(string href = default(string), ResourceId id = default(ResourceId), string name = default(string), System.DateTimeOffset? created = default(System.DateTimeOffset?), ResourceId parentPortfolioId = default(ResourceId), VersionDto version = default(VersionDto), IList<Link> _links = default(IList<Link>))
        {
            Href = href;
            Id = id;
            Name = name;
            Created = created;
            ParentPortfolioId = parentPortfolioId;
            Version = version;
            this._links = _links;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets link to retrieve the current entity
        /// </summary>
        [JsonProperty(PropertyName = "href")]
        public string Href { get; set; }

        /// <summary>
        /// Gets or sets identifier for the portfolio
        /// </summary>
        [JsonProperty(PropertyName = "id")]
        public ResourceId Id { get; set; }

        /// <summary>
        /// Gets or sets name of the portfolio
        /// </summary>
        [JsonProperty(PropertyName = "name")]
        public string Name { get; set; }

        /// <summary>
        /// Gets or sets portfolio creation time in UTC
        /// </summary>
        [JsonProperty(PropertyName = "created")]
        public System.DateTimeOffset? Created { get; set; }

        /// <summary>
        /// Gets or sets if this is a derived portfolio, the identifier of the
        /// portfolio from which it is derived
        /// </summary>
        [JsonProperty(PropertyName = "parentPortfolioId")]
        public ResourceId ParentPortfolioId { get; set; }

        /// <summary>
        /// Gets or sets the version of the portfolio
        /// </summary>
        [JsonProperty(PropertyName = "version")]
        public VersionDto Version { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "_links")]
        public IList<Link> _links { get; set; }

    }
}
