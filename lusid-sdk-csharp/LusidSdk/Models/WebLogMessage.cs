// <auto-generated>
// Copyright Â© 2018 FINBOURNE TECHNOLOGY LTD
//
// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to
// deal in the Software without restriction, including without limitation the
// rights to use, copy, modify, merge, publish, distribute, sublicense, and/or
// sell copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:
//
// The above copyright notice and this permission notice shall be included in
// all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
// FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS
// IN THE SOFTWARE.
// </auto-generated>

namespace Finbourne.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// A log message structured for provision by a web project
    /// </summary>
    public partial class WebLogMessage
    {
        /// <summary>
        /// Initializes a new instance of the WebLogMessage class.
        /// </summary>
        public WebLogMessage()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the WebLogMessage class.
        /// </summary>
        /// <param name="version">The semantic version of the remote
        /// application submitting the log</param>
        /// <param name="url">The url of the resource from which the message
        /// originated</param>
        /// <param name="message">The body of the message</param>
        /// <param name="context">Context as to the occurance of the
        /// message</param>
        /// <param name="severity">The severity of the message. Possible values
        /// include: 'Warn', 'Error'</param>
        /// <param name="stacktrace">Any stacktrace that may be
        /// relavent</param>
        /// <param name="browser">Any browser/user-agent/os related
        /// context</param>
        public WebLogMessage(string version = default(string), string url = default(string), string message = default(string), string context = default(string), string severity = default(string), string stacktrace = default(string), string browser = default(string))
        {
            Version = version;
            Url = url;
            Message = message;
            Context = context;
            Severity = severity;
            Stacktrace = stacktrace;
            Browser = browser;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets the semantic version of the remote application
        /// submitting the log
        /// </summary>
        [JsonProperty(PropertyName = "version")]
        public string Version { get; set; }

        /// <summary>
        /// Gets or sets the url of the resource from which the message
        /// originated
        /// </summary>
        [JsonProperty(PropertyName = "url")]
        public string Url { get; set; }

        /// <summary>
        /// Gets or sets the body of the message
        /// </summary>
        [JsonProperty(PropertyName = "message")]
        public string Message { get; set; }

        /// <summary>
        /// Gets or sets context as to the occurance of the message
        /// </summary>
        [JsonProperty(PropertyName = "context")]
        public string Context { get; set; }

        /// <summary>
        /// Gets or sets the severity of the message. Possible values include:
        /// 'Warn', 'Error'
        /// </summary>
        [JsonProperty(PropertyName = "severity")]
        public string Severity { get; set; }

        /// <summary>
        /// Gets or sets any stacktrace that may be relavent
        /// </summary>
        [JsonProperty(PropertyName = "stacktrace")]
        public string Stacktrace { get; set; }

        /// <summary>
        /// Gets or sets any browser/user-agent/os related context
        /// </summary>
        [JsonProperty(PropertyName = "browser")]
        public string Browser { get; set; }

    }
}
