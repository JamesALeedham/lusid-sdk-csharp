// <auto-generated>
// Copyright Â© 2018 FINBOURNE TECHNOLOGY LTD
//
// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to
// deal in the Software without restriction, including without limitation the
// rights to use, copy, modify, merge, publish, distribute, sublicense, and/or
// sell copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:
//
// The above copyright notice and this permission notice shall be included in
// all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
// FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS
// IN THE SOFTWARE.
// </auto-generated>

namespace Finbourne.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    public partial class DeleteInstrumentPropertyRequest
    {
        /// <summary>
        /// Initializes a new instance of the DeleteInstrumentPropertyRequest
        /// class.
        /// </summary>
        public DeleteInstrumentPropertyRequest()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the DeleteInstrumentPropertyRequest
        /// class.
        /// </summary>
        /// <param name="instrumentPropertyKey">The property key of the
        /// property to be removed from the instrument, e.g
        /// 'Instrument/default/Cusip`</param>
        /// <param name="effectiveFrom">The date at which the property removal
        /// should be effective from. If no value is set, then 'now' is
        /// used.</param>
        public DeleteInstrumentPropertyRequest(string instrumentPropertyKey = default(string), System.DateTimeOffset? effectiveFrom = default(System.DateTimeOffset?))
        {
            InstrumentPropertyKey = instrumentPropertyKey;
            EffectiveFrom = effectiveFrom;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets the property key of the property to be removed from
        /// the instrument, e.g 'Instrument/default/Cusip`
        /// </summary>
        [JsonProperty(PropertyName = "instrumentPropertyKey")]
        public string InstrumentPropertyKey { get; set; }

        /// <summary>
        /// Gets or sets the date at which the property removal should be
        /// effective from. If no value is set, then 'now' is used.
        /// </summary>
        [JsonProperty(PropertyName = "effectiveFrom")]
        public System.DateTimeOffset? EffectiveFrom { get; set; }

    }
}
